<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yootk.oa.dao.ProjectMapper">
    <sql id="Base_Column_List">
    proid, title, alias, founder, head, pl, tl, startdate, enddate, description, state, workinghours
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="Project">
        select
        <include refid="Base_Column_List"/>
        from project
        where proid = #{proid}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from project
    where proid = #{proid}
  </delete>
    <insert id="insert" parameterType="Project">
    insert into project (proid, title, alias, 
      founder, head, pl, tl, 
      startdate, enddate, description, 
      state, workinghours)
    values (#{proid}, #{title}, #{alias}, 
      #{founder}, #{head}, #{pl}, #{tl}, 
      #{startdate}, #{enddate}, #{description}, 
      #{state}, #{workinghours})
  </insert>
    <insert id="insertSelective" parameterType="Project">
        insert into project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="proid != null">
                proid,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="alias != null">
                alias,
            </if>
            <if test="founder != null">
                founder,
            </if>
            <if test="head != null">
                head,
            </if>
            <if test="pl != null">
                pl,
            </if>
            <if test="tl != null">
                tl,
            </if>
            <if test="startdate != null">
                startdate,
            </if>
            <if test="enddate != null">
                enddate,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="workinghours != null">
                workinghours,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="proid != null">
                #{proid},
            </if>
            <if test="title != null">
                #{title},
            </if>
            <if test="alias != null">
                #{alias},
            </if>
            <if test="founder != null">
                #{founder},
            </if>
            <if test="head != null">
                #{head},
            </if>
            <if test="pl != null">
                #{pl},
            </if>
            <if test="tl != null">
                #{tl},
            </if>
            <if test="startdate != null">
                #{startdate},
            </if>
            <if test="enddate != null">
                #{enddate},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="state != null">
                #{state},
            </if>
            <if test="workinghours != null">
                #{workinghours},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Project">
        update project
        <set>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="alias != null">
                alias = #{alias},
            </if>
            <if test="founder != null">
                founder = #{founder},
            </if>
            <if test="head != null">
                head = #{head},
            </if>
            <if test="pl != null">
                pl = #{pl},
            </if>
            <if test="tl != null">
                tl = #{tl},
            </if>
            <if test="startdate != null">
                startdate = #{startdate},
            </if>
            <if test="enddate != null">
                enddate = #{enddate},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="workinghours != null">
                workinghours = #{workinghours},
            </if>
        </set>
        where proid = #{proid}
    </update>
    <update id="updateByPrimaryKey" parameterType="Project">
        update project
        set title = #{title},
        alias = #{alias},
        founder = #{founder},
        head = #{head},
        pl = #{pl},
        tl = #{tl},
        startdate = #{startdate},
        enddate = #{enddate},
        description = #{description},
        state = #{state},
        workinghours = #{workinghours}
        where proid = #{proid}
    </update>

    <select id="findSplit" parameterType="Map" resultType="Project">
        select
        <include refid="Base_Column_List"/>
        from project
        <where>
            <if test="column != null and keyword != null and keyword != &quot;&quot; and column != &quot;&quot;">
                ${column} like #{keyword}
            </if>
        </where>
        <if test="start != null and lineSize != null">
            limit #{start}, #{lineSize}
        </if>
    </select>

    <select id="getAllRecorders" resultType="java.lang.Long" parameterType="Map">
        select count(*) from project
        <where>
            <if test="column != null and keyword != null and keyword != &quot;&quot; and column != &quot;&quot;">
                ${column} like #{keyword}
            </if>
        </where>
    </select>

    <update id="state" parameterType="Project">
        update project
        set state=#{state}
        where proid = #{proid}
    </update>

    <select id="findSearchSplit" parameterType="Map" resultType="Project">
        select
        <include refid="Base_Column_List"/>
        from project
        <where>
            <if test="state != null and state != &quot;&quot;">
                state=#{state} and
            </if>
            <if test="title != null and title != &quot;&quot;">
                title like #{title}
            </if>
        </where>
        <if test="start != null and lineSize != null">
            limit #{start}, #{lineSize}
        </if>
    </select>

    <select id="getAllSearchRecorders" resultType="java.lang.Long" parameterType="Map">
        select count(*) from project
        <where>
            <if test="state != null and state != &quot;&quot;">
                state=#{state} and
            </if>
            <if test="title != null and title != &quot;&quot;">
                title like #{title}
            </if>
        </where>
    </select>
</mapper>