<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yootk.oa.dao.RequireMapper">
    <sql id="Base_Column_List">
    id, proid, origin, grade, title, founder, assigned, workhours, createdate, state, 
    period, description, standard, appendix, did, `type`
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultType="Require">
        select
        <include refid="Base_Column_List"/>
        from `require`
        where id = #{id}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from `require`
    where id = #{id}
  </delete>
    <insert id="insert" parameterType="Require">
    insert into `require` (id, proid, origin, 
      grade, title, founder, 
      assigned, workhours, createdate, 
      state, period, description, 
      standard, appendix, did, 
      type)
    values (#{id}, #{proid}, #{origin}, 
      #{grade}, #{title}, #{founder}, 
      #{assigned}, #{workhours}, #{createdate}, 
      #{state}, #{period}, #{description}, 
      #{standard}, #{appendix}, #{did}, 
      #{type})
  </insert>
    <insert id="insertSelective" parameterType="Require">
        insert into `require`
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="proid != null">
                proid,
            </if>
            <if test="origin != null">
                origin,
            </if>
            <if test="grade != null">
                grade,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="founder != null">
                founder,
            </if>
            <if test="assigned != null">
                assigned,
            </if>
            <if test="workhours != null">
                workhours,
            </if>
            <if test="createdate != null">
                createdate,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="period != null">
                period,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="standard != null">
                standard,
            </if>
            <if test="appendix != null">
                appendix,
            </if>
            <if test="did != null">
                did,
            </if>
            <if test="type != null">
                type,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="proid != null">
                #{proid},
            </if>
            <if test="origin != null">
                #{origin},
            </if>
            <if test="grade != null">
                #{grade},
            </if>
            <if test="title != null">
                #{title},
            </if>
            <if test="founder != null">
                #{founder},
            </if>
            <if test="assigned != null">
                #{assigned},
            </if>
            <if test="workhours != null">
                #{workhours},
            </if>
            <if test="createdate != null">
                #{createdate},
            </if>
            <if test="state != null">
                #{state},
            </if>
            <if test="period != null">
                #{period},
            </if>
            <if test="description != null">
                #{description},
            </if>
            <if test="standard != null">
                #{standard},
            </if>
            <if test="appendix != null">
                #{appendix},
            </if>
            <if test="did != null">
                #{did},
            </if>
            <if test="type != null">
                #{type},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="Require">
        update `require`
        <set>
            <if test="proid != null">
                proid = #{proid},
            </if>
            <if test="origin != null">
                origin = #{origin},
            </if>
            <if test="grade != null">
                grade = #{grade},
            </if>
            <if test="title != null">
                title = #{title},
            </if>
            <if test="founder != null">
                founder = #{founder},
            </if>
            <if test="assigned != null">
                assigned = #{assigned},
            </if>
            <if test="workhours != null">
                workhours = #{workhours},
            </if>
            <if test="createdate != null">
                createdate = #{createdate},
            </if>
            <if test="state != null">
                state = #{state},
            </if>
            <if test="period != null">
                period = #{period},
            </if>
            <if test="description != null">
                description = #{description},
            </if>
            <if test="standard != null">
                standard = #{standard},
            </if>
            <if test="appendix != null">
                appendix = #{appendix},
            </if>
            <if test="did != null">
                did = #{did},
            </if>
            <if test="type != null">
                type = #{type},
            </if>
        </set>
        where id = #{id}
    </update>
    <update id="updateByPrimaryKey" parameterType="Require">
    update `require`
    set proid = #{proid},
      origin = #{origin},
      grade = #{grade},
      title = #{title},
      founder = #{founder},
      assigned = #{assigned},
      workhours = #{workhours},
      createdate = #{createdate},
      state = #{state},
      period = #{period},
      description = #{description},
      standard = #{standard},
      appendix = #{appendix},
      did = #{did},
      type = #{type}
    where id = #{id}
  </update>
    <select id="findSplit" parameterType="Map" resultType="Require">
        select
        <include refid="Base_Column_List"/>
        from `require`
        where proid=#{proid}
        <if test="column != null and keyword != null and keyword != &quot;&quot; and column != &quot;&quot;">
            and ${column} like #{keyword}
        </if>
        <if test="start != null and lineSize != null">
            limit #{start}, #{lineSize}
        </if>
    </select>

    <select id="getAllRecorders" resultType="java.lang.Long" parameterType="Map">
        select count(*) from `require`
        where proid=#{proid}
        <if test="column != null and keyword != null and keyword != &quot;&quot; and column != &quot;&quot;">
            and ${column} like #{keyword}
        </if>
    </select>

    <select id="findSearchSplit" parameterType="Map" resultType="Require">
        select
        <include refid="Base_Column_List"/>
        from `require`
        where proid=#{proid}
        <if test="title != null and title != &quot;&quot;">
            and title like #{title}
        </if>
        <if test="state != null and state != &quot;&quot;">
            and state=#{state}
        </if>
        <if test="period != null and period != &quot;&quot;">
            and period=#{period}
        </if>
        <if test="assigned != null and assigned != &quot;&quot;">
            and assigned=#{assigned}
        </if>
        <if test="start != null and lineSize != null">
            limit #{start}, #{lineSize}
        </if>
    </select>
    <select id="getAllSearchRecorders" resultType="java.lang.Long" parameterType="Map">
        select count(*) from `require`
        where proid=#{proid}
        <if test="title != null and title != &quot;&quot;">
            and title like #{title}
        </if>
        <if test="state != null and state != &quot;&quot;">
            and state=#{state}
        </if>
        <if test="period != null and period != &quot;&quot;">
            and period=#{period}
        </if>
        <if test="assigned != null and assigned != &quot;&quot;">
            and assigned=#{assigned}
        </if>
    </select>
</mapper>